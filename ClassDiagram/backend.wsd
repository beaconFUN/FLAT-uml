@startuml project

hide empty fields
hide empty methods

title Backend

class Main{
    + endpoints
}
Main o-- user.UserContoroller
Main o-- friend.FriendController

package user{
    class UserContoroller{
        + model
        + view
    }

    UserContoroller --> UserModel
    UserContoroller o--> UserView
    UserModel --> DB.UserTable
    UserModel --> WebStorage.Storage

    class UserView<<(V, #ffccff)>>{
        + dataFormatting()
    }

    class UserModel<<(M, #ffffff)>>{
        + updateName(ID, Name)
        + updateStatus(ID, status)
        + updateIcon(ID, Icon)
        + updateBeacon(ID, Beacon)
        + follow(ID_1, ID_2)
        - generateID() -> String
        - hashWithSalt(password)
        - existUser() -> bool
        + login(ID, Password)
        + registor(Name, Password)
        + getUser(ID) -> User

    }

}

package friend{
    class FriendController{
        + model
        + view
    }

    FriendController --> FriendModel
    FriendController o--> FriendView
    FriendModel --> DB.FriendTable

    class FriendView<<(V, #ffccff)>>{
        + dataFormatting()
    }

    class FriendModel<<(M, #ffffff)>>{
        + getFriends(ID) -> User[] with MutualFlag
        + addFriends(ID_1, ID_2)
        + deleteFriend(ID_1, ID_2)
        + blockFriend(ID_1, ID_2)
        + unBlockFriend(ID_1, ID_2)
        + registor()
        - insertUser(ID, Name, hashedPassword1)
        - getFriendsID()
    }
}


package DB {

    class UserTable<<(D, #ffffff)>>{
        + ID
        + Name
        + Status
        + IconPath
        + Beacon
        + HashedPassword
    }

    class FriendTable<<(D, #ffffff)>>{
        + ID
        + user_ID: String
        + follow_ID: String
        + BlockedFlag: bool
    }

}

package WebStorage{
    class Storage{
        + icon_blob
    }
}


@enduml